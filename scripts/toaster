#!/usr/bin/env bash

##############################################
#	Author: Nidia Achrys
#	Project: toaster
#	Version: 1.0
#
#	Usage: toaster [command] [args]
#
#	Description:
#		Toaster simulator
##############################################

version='1.0'
author='Nidia Achrys'

# Source common script functions
source $SCRIPTS/01-api.sh

#############
# Core Code #
#############

broken="false"

random()
{
	echo $(( ${RANDOM} % ${1} ))
}

makeToast()
{
	read -p "Pieces > " pieces

	PRINT 
	[[ ! ${pieces} =~ [0-9]+ ]] && PRINT "You must specify a number!" && return 1

	PRINT "Making ${pieces} piece(s) of toast..."
	sleep 3
	PRINT "Made ${pieces} piece(s) of toast."

	PRINT 
	PAUSE
	return 0
}

commitBath()
{
	PRINT 
	PRINT "Committing toaster bath..."
	sleep 3

	successful="`random 2`"

	if [ ! "${broken}" == "false" ]; then
		PRINT "The toaster was previously broken. Find a new toaster?"
		broken="true"
		return 1
	fi

	if [ "${successful}" == "0" ]; then
		PRINT "The toaster wasn't plugged in, and has been damaged by the water."
	else
		PRINT "You have died. Have a nice afterlife!"
	fi

	broken="true"
	sleep 3

	PRINT 
	PAUSE
	return 0
}

throwToaster()
{
	read -p "Target > " target

	PRINT 
	PRINT "You have thrown a toaster at ${target}."
	sleep 3

	successful="`random 2`"

	if [ "${successful}" == "0" ]; then
		PRINT "You didn't aim properly, and the toaster hit the wall."
	else
		PRINT "Your aim was perfect and you hit ${target} in the head."
	fi

	broken="true"

	PRINT 
	PAUSE
	return 0
}

cmd=""

while [[ "${cmd}" != "4" ]]; do
	clear
	PRINT "Toaster Menu"
	PRINT 
	PRINT 
	PRINT "1. Make Toast"
	PRINT "2. Commit Toaster Bath"
	PRINT "3. Throw Toaster"
	PRINT "4. Exit"
	PRINT
	read -p "Choice > " cmd

	case "${cmd}" in

		1 )
			makeToast
			;;
		2 )
			commitBath
			;;
		3 )
			throwToaster
			;;
		4 )
			clear
			exit 0
			;;
		* )
			PRINT "Invalid option. Use the number!"
			;;

	esac
done
