#!/usr/bin/env bash

##############################################
#	Author: Nidia Achrys
#	Project: toaster
#	Version: 1.0
#
#	Usage: toaster [command] [args]
#
#	Description:
#		Toaster simulator
##############################################

version='1.0'
author='Nidia Achrys'

# Source common script functions
source $SCRIPTS/headers/02-api.sh

#############
# Core Code #
#############

broken="false"

random()
{
	echo $(( ${RANDOM} % ${1} ))
}

makeToast()
{
	read -p "Pieces: " pieces

	api.PRINT 
	[[ ! ${pieces} =~ [0-9]+ ]] && api.PRINT "You must specify a number!" && return 1

	api.PRINT "Making ${pieces} piece(s) of toast..."
	sleep 3
	api.PRINT "Made ${pieces} piece(s) of toast."

	api.PRINT 
	api.PAUSE
	return 0
}

commitBath()
{
	api.PRINT 
	api.PRINT "Committing toaster bath..."
	sleep 3

	successful="`random 2`"

	if [ "${broken}" != "false" ]; then
		api.PRINT "The toaster was previously broken. Find a new toaster?"; sleep 3; api.PAUSE
		broken="true"
		return 1
	fi

	if [ "${successful}" == "0" ]; then
		api.PRINT "The toaster wasn't plugged in, and has been damaged by the water."; sleep 3; api.PAUSE
	else
		api.PRINT "You have died. Have a nice afterlife!"; sleep 3; api.PAUSE
	fi

	broken="true"

	api.PRINT 
	return 0
}

throwToaster()
{
	read -p "Target: " target

	api.PRINT 
	api.PRINT "You have thrown a toaster at ${target}."
	sleep 3

	successful="`random 2`"

	if [ "${successful}" == "0" ]; then
		api.PRINT "You didn't aim properly, and the toaster hit the wall."; api.PAUSE
	else
		api.PRINT "Your aim was perfect and you hit ${target} in the head."; api.PAUSE
	fi

	broken="true"
	api.PRINT 
	return 0
}

cmd=""

while [[ "${cmd}" != "4" ]]; do
	clear
	api.PRINT "Toaster Menu"
	api.PRINT 
	api.PRINT 
	api.PRINT "1. Make Toast"
	api.PRINT "2. Commit Toaster Bath"
	api.PRINT "3. Throw Toaster"
	api.PRINT "4. Exit"
	api.PRINT
	read -p "> " cmd

	cmd=`api.LOWERCASE "${cmd}"`

	case "${cmd}" in

		1 | 'make toast' | 'make me a sammich bitch' )
			makeToast
			;;
		2 | 'commit toaster bath' )
			commitBath
			;;
		3 | 'throw toaster' )
			throwToaster
			;;
		4 | 'exit' )
			clear
			exit 0
			;;
		* )
			api.ERROR "\nInvalid option!\n"
			api.PAUSE
			;;

	esac
done
