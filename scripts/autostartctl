#!/usr/bin/env bash

##############################################
#	Author: Nidia Achrys
#	Project: autostartctl
#	Version: 1.0
#
#	Usage: autostartctl [command] [args]
# 
# Description:
#   This utility provides tools to create, edit, list, and print
#   XDG Autostart desktop entries.
##############################################

version='1.0'
author='Nidia Achrys'

# Source common script functions
source $SCRIPTS/01-api.sh

#############
# Core Code #
#############

# Variables
XDG_AUTOSTART="${HOME}/.config/autostart"
[[ -z "${EDITOR}" ]] && EDITOR=nano

filename=''
file=''
name=''
generic=''
binary=''
icon=''
apptype=''
categories=''
path=''

# Functions
append() {
  tee -a ${XDG_AUTOSTART}/${filename}.desktop
}

err() {
  PRINT "[$(date +'%Y-%m-%d %H:%M:%S%z')]: ${@}"
}

function TEMPLATE()
{
_template="
[Desktop Entry]
Name=${name}
Exec=${binary}
Type=${apptype}
Categories=${categories}
Hidden=true
"

[ -n "${generic}" ] && _template="${_template}\nGenericName=${generic}"
[ -n "${icon}" ] && _template="${_template}\nIcon=${icon}"
[ -n "${path}" ] && _template="${_template}\nPath=${path}"
}

makeEntry() {

    filename="${1}"
    [[ -z "${filename}" ]] && read -p "Entry Name: " filename

    file="${XDG_AUTOSTART}/${filename}.desktop"

    [[ -f "${file}" ]] && err "`SCRIPTNAME`: ${filename} already exists!" && exit 1

    touch ${file}

    read -p "App Name: " name
    read -p "Executable Path: " binary
    read -p "Categories (semicolon separated): " categories
    read -p "Icon Path: " icon
    read -p "Generic Name: " generic

    apptype="Application"
    [[ -z "${categories}" ]] && categories="Utility;"

    # Add entry information to the file
    TEMPLATE
    PRINT ${_template} > ${file}

    PRINT "`SCRIPTNAME`: Created ${filename}!"
    exit 0

}

editEntry() {

  filename="${1}"
  [[ -z "${filename}" ]] && read -p "Name of Entry: " filename

  file="${XDG_AUTOSTART}/${filename}.desktop"

  if [[ -f "${file}" ]]
  then
    ${EDITOR} ${file}
    PRINT "`SCRIPTNAME`: Edited ${filename}!"
    exit 0
  else
    err "`SCRIPTNAME`: Entry ${filename} does not exist!"
    exit 1
  fi
}

removeEntry() {
  filename="${1}"

  [[ -z "${filename}" ]] && read -p "Name of Entry: " filename

  file="${XDG_AUTOSTART}/${filename}.desktop"

  if [[ -e "${file}" ]]
  then
    rm -rf ${file}
    PRINT "`SCRIPTNAME`: Removed ${filename}!"
    exit 0
  else
    err "`SCRIPTNAME`: Entry ${filename} does not exist!"
    exit 1
  fi
}

listEntries() {
  ls -1 --group-directories-first ${XDG_AUTOSTART} | sed -e 's/\.desktop//'
  exit 0
}

printEntry() {
  filename="${1}"

  [[ -z "${filename}" ]] && read -p "Name of Entry: " filename

  file="${XDG_AUTOSTART}/${filename}.desktop"

  if [[ -e "${file}" ]]
  then
    PRINT 
    PRINT 
    cat ${file}
    exit 0
  else
    err "`SCRIPTNAME`: ${filename} does not exist!"
    exit 1
  fi
}

helpPrompt() {
  PRINT 
  PRINT "Manage XDG Autostart desktop entries."
  PRINT
  PRINT "Usage: `SCRIPTNAME` [command] [FLAGS]... [VALUES]..." 
  PRINT "Example: `SCRIPTNAME` c discord"
  PRINT "Example: `SCRIPTNAME` l"
  PRINT
  PRINT "Options: "
  PRINT "(c) create\t\tCreate an autostart entry and exit"
  PRINT "(e) edit\t\tEdit an autostart entry and exit"
  PRINT "(r) remove\t\tRemove an autostart entry and exit"
  PRINT "(l) list\t\tList all entries and exit"
  PRINT "(p) print\t\tDisplay an entry's contents and exit"
  PRINT
  PRINT "Miscellaneous:"
  PRINT "(h) help\t\tDisplay this help and exit"
  PRINT "(v) version\t\tDisplay this script's version and exit"
  exit 0
}

# Creates the autostart directory if it does not already exist.
[[ ! -d "${XDG_AUTOSTART}" ]] && mkdir ${XDG_AUTOSTART}

cmd=`LOWERCASE ${1}`

case "${cmd}" in
  c | create )
    makeEntry "${2}"
    ;;
  e | edit )
    editEntry "${2}"
    ;;
  r | remove )
    removeEntry "${2}"
    ;;
  l | list )
    listEntries
    ;;
  p | print )
    printEntry "${2}"
    ;;
  v | version )
    VERSION
    ;;
  \? | h | help )
    helpPrompt
    ;;
  * )
    [ -z "${cmd}" ] && helpPrompt || INVALID "${cmd}" && exit 1
    ;;
esac
