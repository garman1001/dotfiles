#!/usr/bin/env bash
# Author: Nidia Achrys
# Project: trash
# Version: 2.0
# Description:
#	This utility manages your trash bin.
#
# Usage: trash [OPTION] [FLAGS]

declare -- VERSION
declare -- CMDNAME
declare -- TRASHINFO
declare -- FILENAME
declare -- FILEINFO
declare -- DELPATH
declare -- DELDATE
declare -- FILEPATH
declare -- FILEINFO
declare -- RESTOREPATH

VERSION="1.0"
CMDNAME="`basename $0`"
TRASHDIRS=$HOME/.local/share/Trash
[ -z "$TRASH" ] && TRASH=$TRASHDIRS/files
TRASHINFO=$TRASHDIRS/info

checkFile()
{
  if [ -n "$1" ];
  then
    FILE="$1"
  else
    echo "You must specify a FILE."
    exit 1
  fi
}

getPath()
{
  confFile="${1}"
  echo "$(grep -m 1 Path= ${confFile} | sed 's|Path=||')"
}

getDate()
{
  confFile="${1}"
  echo "$(grep -m 1 DeletionDate= ${confFile} | sed 's|DeletionDate=||')"
}

add()
{
  checkFile "$1"
  if [ -e "${FILE}" ];
  then
    FILENAME="$(basename ${FILE})"
    DELFILE="${TRASHINFO}/${FILE}.trashinfo"
    DELPATH=$(readlink -f ${FILE})
    DELDATE=$(date +"%Y-%m-%dT%H:%M:%S")

    echo -e "[Trash Info]" > "${TRASHINFO}/${FILENAME}.trashinfo"
    echo -e "Path=${DELPATH}" >> "${TRASHINFO}/${FILENAME}.trashinfo"
    echo -e "DeletionDate=${DELDATE}" >> "${TRASHINFO}/${FILENAME}.trashinfo"
    mv ${FILE} ${TRASH}
    echo -e "${CMDNAME}: Moved ${FILE} to the trash!"
    exit 0
  else
    echo -e "File '${FILE}' doesn't exist!"
    exit 1
  fi
}

restore()
{
  checkFile "$1"

  FILEPATH="${TRASH}/${FILE}"
  FILEINFO="${TRASHINFO}/${FILE}.trashinfo"

  if [ -f "${FILEINFO}" ] && [ -e "${FILEPATH}" ];
  then
    RESTOREPATH="$(getPath ${FILEINFO})"
    
    mv "${FILEPATH}" "${RESTOREPATH}"
    rm -f "${FILEINFO}"

    echo -e "${CMDNAME}: Restored ${FILE} to ${RESTOREPATH}!"
    exit 0
  else
    echo -e "File ${FILE} is not in the trash!"
    exit 1
  fi
}

empty()
{
  find $TRASH -type f -name ".*" -delete
  find $TRASHINFO -type f -name ".*" -delete
  echo -e "Emptied the trash!"
  exit 0
}

info()
{
  checkFile "$1"

  FILEINFO=$TRASHINFO/"${FILE}.trashinfo"
  
  if [ -e "${FILEINFO}" ];
  then
    cat "${FILEINFO}"
    exit 0
  else
    echo "${CMDNAME}: File does not have metadata / doesn't exist!"
    exit 1
  fi
}

version()
{
  echo "${CMDNAME} ${VERSION}"
  echo
  echo "Copyright (C)  Nidia Achrys"
  echo "License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>."
  echo "This is free software: you are free to change and redistribute it."
  echo "There is NO WARRANTY, to the extent permitted by law."
  echo
  echo "Written by Nidia Achrys."
  exit 0
}

helpPrompt()
{
 echo -e "Usage: ${CMDNAME} [command] <FILE>"
 echo
 echo "Commands:"
 echo -e "\t-A, --add\n\t\tAdd a FILE to the trash"
 echo -e "\t-R, --restore\n\t\tRestore a FILE from the trash"
 echo -e "\t-E, --empty\n\t\tEmpty the trash bin"
 echo -e "\t-L, --list\n\t\tList the contents of the trash bin"
 echo -e "\t-I, --info\n\t\tGet a FILE's trash metadata"
 echo
 echo "Miscellaneous"
 echo -e "\t-v, --version\n\t\tPrint the version of this script"
 echo -e "\t-h, --help\n\t\tShow this prompt"
 exit 0
}

case "${1}" in
  -A | --add )
    add "${2}"
    ;;
  -R | --restore)
    restore "${2}"
    ;;
  -E | --empty )
    empty
    ;;
  -L | --list )
    ls --color=auto -alvhF --group-directories-first $TRASH 
    exit 0
    ;;
  -I | --info )
    info "${2}"
    ;;
  -v | --version )
    version
    ;;
  \? | -h | --help )
    helpPrompt
    ;;
  * )
    echo -e "Invalid command."
    echo -e "See 'trash help' for a full list of commands."
    exit 1
    ;;
esac

unset VERSION
unset CMDNAME
unset TRASHINFO
unset FILENAME
unset FILEINFO
unset DELPATH
unset DELDATE
unset FILEPATH
unset FILEINFO
unset RESTOREPATH
