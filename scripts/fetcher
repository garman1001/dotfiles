#!/usr/bin/env bash

##############################################
#	Author: Nidia Achrys
#	Project: fetcher
#	Version: 1.0
#
#	Usage: fetcher
#
#	Description:
#		Retrieve system information for use in screenshots
##############################################

version='1.0'
author='Nidia Achrys'

#######################################################################
#							Helper Functions						  #
#######################################################################
function SCRIPTNAME()
{
	echo "${0##*/}"
}

function PRINT()
{
	if [ -z "${1}" ]; then
		printf "\n"
	else
		printf "%b\n" "${1}"
	fi
}

function pause()
{
	read -p "Press ENTER to continue..." cmd
}

function lowercase()
{
	printf "${1}" | tr "[:upper:]" "[:lower:]"
}

function invalid()
{
	PRINT 
	PRINT "Invalid command \"${1}\". See \"`SCRIPTNAME` help\"."
	PRINT 
}

function emptycmd()
{
	PRINT 
	PRINT "You must specify a subcommand. See \"`SCRIPTNAME` help\"."
	PRINT 
}

function version()
{
	PRINT "`SCRIPTNAME` v${version}"
	PRINT "Copyright (C) `date +"%Y"` ${author}"
	PRINT "License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>."
	PRINT "This is free software: you are free to change and redistribute it."
	PRINT "There is NO WARRANTY, to the extent permitted by law."
	PRINT
	PRINT "Written by ${author}."
}

#######################################################################
#								Core Code							  #
#######################################################################

function LINE()
{
	PRINT "--------------------------------"
}

OS="`grep '^NAME=' /etc/os-release | sed 's/NAME=//;s/"//g'` `uname -s` `uname -m`"
HOST="`uname -n`"
KERNEL="`uname -r`"
UPTIME=`uptime --pretty | sed 's|^up\s||'`
PKGCOUNT=""

# Package count
[[ `command -v pacman` ]] && PKGCOUNT="$PKGCOUNT`pacman -Qq | wc -l` (pacman), "
[[ `command -v apt` ]] && PKGCOUNT="$PKGCOUNT`apt list --installed 2>/dev/null | wc -l` (apt), "
[[ `command -v flatpak` ]] && PKGCOUNT="$PKGCOUNT`flatpak list | wc -l` (flatpak), "
[[ `command -v snap` ]] && snapCount=$(( $(snap list | wc -l) - 1 )) && PKGCOUNT="$PKGCOUNT$snapCount (snap), "

# Processor
CORES=`cat /proc/cpuinfo | grep processor | wc -l`
CPUNAME=`grep '^model name' /proc/cpuinfo -m 1 | sed -E 's|^model\sname\s*:\s||g'`

# Memory
MEMTOTAL="`grep 'MemTotal' /proc/meminfo | sed 's|MemTotal:\s*||g'`"
MEMFREE="`grep 'MemFree' /proc/meminfo | sed 's|MemFree:\s*||g'`"
MEMORY="$MEMFREE / $MEMTOTAL"

LINE
PRINT "| ${USER}@${HOST}"
LINE
PRINT "| OS: \t\t${OS}"
PRINT "| Kernel: \t${KERNEL}"
PRINT "| Uptime: \t${UPTIME}"
PRINT "| Packages: \t${PKGCOUNT}"
PRINT "| Shell: \t${SHELL}"
PRINT "| Processor: \t${CPUNAME}"
PRINT "| Cores: \t${CORES}"
PRINT "| Memory: \t${MEMORY}"
LINE
