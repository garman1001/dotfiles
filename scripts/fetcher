#!/usr/bin/env bash

##############################################
#	Author: Nidia Achrys
#	Project: fetcher
#	Version: 1.0
#
#	Usage: fetcher
#
#	Description:
#		Retrieve system information for use in screenshots
##############################################

version='1.0'
author='Nidia Achrys'

# Source common script functions
source $SCRIPTS/libs/01-api.sh

#############
# Core Code #
#############

# Dependencies
api.required.command "grep"
api.required.command "sed"
api.required.command "uname"
api.required.command "cat"

fetcher.fetch ()
{
    # Operating System Information
    OS="`grep '^NAME=' /etc/os-release | sed 's/NAME=//;s/"//g'`"
    OS="${OS} `grep '^VERSION=' /etc/os-release | sed 's/VERSION=//;s/"//g'`"

    # Host, Kernel, and Uptime Information
    HOST="`uname -n`"
    KERNEL="`uname -r`"
    UPTIME=`uptime --pretty | sed 's|^up\s||'`

    # Package count
    PKGCOUNT=""
    [[ `command -v pacman` ]] && PKGCOUNT="$PKGCOUNT`pacman -Qq | wc -l` (pacman), "
    [[ `command -v apt` ]] && PKGCOUNT="$PKGCOUNT`apt list --installed 2>/dev/null | wc -l` (apt), "
    [[ `command -v dnf` ]] && PKGCOUNT="$PKGCOUNT`dnf list installed | wc -l` (rpm), "
    [[ `command -v flatpak` ]] && PKGCOUNT="$PKGCOUNT`flatpak list | wc -l` (flatpak), "
    [[ `command -v snap` ]] && snapCount=$(( $(snap list | wc -l) - 1 )) && PKGCOUNT="$PKGCOUNT$snapCount (snap), "

    # Processor
    CORES=`cat /proc/cpuinfo | grep processor | wc -l`
    CPUNAME=`grep '^model name' /proc/cpuinfo -m 1 | sed -E 's|^model\sname\s*:\s||g'`

    # Memory
    MEMTOTAL="`grep 'MemTotal' /proc/meminfo | sed 's|MemTotal:\s*||g'`"
    MEMFREE="`grep 'MemFree' /proc/meminfo | sed 's|MemFree:\s*||g'`"
    MEMORY="$MEMFREE / $MEMTOTAL"
}

# Print out the information gathered
fetcher.info()
{
    api.std.printLn "Name|${USER}@${HOST}"
    api.std.printLn "OS|${OS}"
    api.std.printLn "Kernel|${KERNEL}"
    api.std.printLn "Uptime|${UPTIME}"
    api.std.printLn "Packages|${PKGCOUNT/%, /}"
    api.std.printLn "Shell|${SHELL}"
    api.std.printLn "Processor|${CPUNAME}"
    api.std.printLn "Cores|${CORES}"
    api.std.printLn "Memory|${MEMORY}"
}

# Retrieve
fetcher.fetch

line="---------------------------------------------------------"

# Header
api.std.printLn $line
api.std.printLn "|                        Fetcher                        |"
api.std.printLn $line

# Print
api.std.printLn
fetcher.info | column -t -s "|"
api.std.printLn

# Footer
api.std.printLn $line

