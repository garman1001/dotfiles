#!/usr/bin/env bash

##############################################
#	Author: Nidia Achrys
#	Project: extract
#	Version: 1.0
#
#	Usage: extract [command] [args]
#
#	Description:
#		Extract any archive file
##############################################

version='1.0'
author='Nidia Achrys'

# Source common script functions
source $SCRIPTS/libs/01-api.sh

#############
# Core Code #
#############

if [ $# -eq 0 ]
then
	api.std.printLn 
	api.std.printLn "usage: `api.script.name` <file>\n"
	api.std.printLn 
	api.std.printLn "supported file types:"
	api.std.printLn "tar.bz2, tar.gz, bz2, rar, gz, tar, tbz2, tgz"
	api.std.printLn "zip, Z, 7z, deb, tar.xz, tar.zst"
	api.std.printLn 
	exit 0
elif [ ! -f "${1}" ]
then
	api.std.failMsg "'${1}' is not a file."
else
	api.std.failMsg "Unknown error"
fi

case "${1}" in
	*.tar.bz2)
		api.required.command "tar"
		tar xjf ${1}
		;;
	*.tar.gz)
		api.required.command "tar"
		tar xzf ${1}
		;;
	*.bz2)
		api.required.command "bunzip"
		bunzip ${1}
		;;
	*.rar)
		api.required.command "unrar"
		unrar x ${1}
		;;
	*.gz)
		api.required.command "gunzip"
		gunzip ${1}
		;;
	*.tar)
		api.required.command "tar"
		tar xf ${1}
		;;
	*.tbz2)
		api.required.command "tar"
		tar xjf ${1}
		;;
	*.tgz)
		api.required.command "tar"
		tar xzf ${1}
		;;
	*.zip)
		api.required.command "unzip"
		unzip ${1}
		;;
	*.Z)
		api.required.command "uncompress"
		uncompress ${1}
		;;
	*.7z)
		api.required.command "7z"
		7z x ${1}
		;;
	*.deb)
		api.required.command "ar"
		ar x ${1}
		;;
	*.tar.xz)
		api.required.command "tar"
		tar xf ${1}
		;;
	*.tar.zst)
		api.required.command "unzstd"
		unzstd ${1}
		;;
	*)
		api.std.failMsg "'${1}' cannot be extracted via ${api.script.name}"
		;;
esac
